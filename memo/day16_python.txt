1. 파이썬이란 ?
  1990년 귀도 반 로섬이 개발한 인터프리터 언어(!= 컴파일 언어)	//인터프리터 언어 : 한줄 한줄 코드를 해석함
  
2. 파이썬으로 할 수 있는 것
  -시스템 유틸리티
  -GUI 프로그래밍(pyqt)
  -C,C++ 과 결합(qlue 언어)
  -웹프로그래밍(flask, django)
  - 수치연산 (numpy)
  -데이터분석(Pandas)
  -database(Oracle, MySQL, MariaDB)
  => 시스템 밀접한 하드웨어, 모바일(안드로이드, 아이폰..)
-------------------------------------------------------------------------------------------------------------------------------------
1. 가장 기본이 되는 자료형
    자료형 : 리스트, 튜플, 딕셔너리, 셋
    숫자형 :  숫자형태로 이루어진 자료형 정수(1,2,3), 실수(3.14)
    문자열
 
1-1 리스트 
 여러개의 자료를 하나로 묶어 관리하여 불편함을 해소함
 수정과 삭제가 가능함(=mutable)

1-2 인덱싱과 슬라이싱
 인덱싱 : 자료를 한개씩 꺼내는 방법
 슬라이싱 : 여러개를 한번에 꺼내는 방법

1-3 리스트 관련 함수 정리
 append :  리스트의 마지막에 요소를 추가
 sort : 리스트의 요소를 순서대로 정렬
 reverse : 리스트의 요소를 거꾸로 정렬
 index : 리스트의 위치값을 반환
 insert : 특정 위치에 삽입
 remove : 리스트의 요소중 지정한 요소가 첫번째로 위치한 값을 삭제/ 리스트 값이 중복인 경우 첫번째의 위치한 중복값을 삭제함
 pop :  리스트의 마지막 요소를 삭제
 count : 리스트에서 특정 요소가 몇개 있는지 확인
 extend : 리스트에 리스트를 더한다.(집어넣는것 아님)

2-1 튜플
 수정과 삭제가 불가능함(=immutable)
 리스트는 [] 를 사용, 튜플을 ()를 사용
 원소를 하나만 담고 싶을 경우에는 (1,) 쉼표를 붙혀야함
 괄호 생략이 가능함
 프로그램이 실행되는 동안 그 값이 항상 변하지 않기를 바란다거나 값이 바뀔까 걱정하고 싶지 않을 때 사용함
 
3-1 딕셔너리
 이름 = 홍길동, 나이  = 15, 성별 = 남자, 대응관계를 나타낼 수 있는 자료형
 다른언어에서는 map, hash 이라고 함
 key값과 value값으로 구성되어있음/ key값으로 value에 접근함
 인덱싱과 슬라이싱 불가능
 수정, 편집 가능(=mutable)
 리스트는 [] 를 사용, 튜플을 ()를 사용, 딕셔너리는 {} 사용 

3-2 딕셔너리 사용시 주의 사항
 key 값이 고유한 값을 사용하기 때문에 중복되는 키값을 설정하면 하나를 제외한 나머지 모든것들은 모두 무시됨
 value 값과는 달리 key 값에는 리스트를 사용 할 수 없음 하지만 tuple은 키값으로 사용할 수 있음
 리스트는 그 값이 변할 수 있기 때문에 key 값으로 쓸 수 없음

3-3 딕셔너리에서 많이 사용 되는 함수 
 keys(): key 값만 뽑아냄
 values() : value 값만 뽑아냄
 items() :  key와 value를 끼리 끼리 묶어서 뽑아냄
 clear() : 모든 요소를 지워버림
 요소 in 자료명 : 자료명에 해당 요소가 있는지 T or F로 나타냄

4-1 Set(집합)
 중복을 허용하지 않음
 순서가 없음 (인덱싱, 슬라이싱 불가능)
 리스트나 튜플은 순서가 있기 때문에 ordered 인덱싱을 통해 값을 얻을 수 있음
 set은 순서가 없기 때문에 인덱싱으로 값을 얻을 수 없음

4-2 교집합
 두개의 집합의 교집합은 & 또는 intersection으로 나타냄
 s1 & s2 또는 s1.intersection(s2)

4-3 합집합
 두개의 집합의 합집합은 | 또는 union으로 나타냄
 s1 | s2 또는 s1.union(s2)

4-4 차집합
 두개의 집합의 차집합은 -으로 나타냄
 s1 - s2

4-5 집합 관련 함수들
 add : 요소를 1개 추가 할 수 있음
 update : 요소를 여러개 추가 할 수 있음

5-1 bool
 boolean True 참, False 거짓(첫문자는 반드시 대문자)
 "",[],(),{}, None, 0 : False

2. 변수
 어떤 값이 들어가 있는 메모리의 위치를 가리킴
 id(a) : a의 주소값을 나타냄
 다른 언어에서는 자료형을 직접 지정해줘야하지만 파이선은 스스로 판단해서 지정함
 
1-1 [:] = copy
 a = [1,2,3]
 b = a[:]    # b는 a의 값을 복사해오되, a가 요소의 값을 바꿔도 변하지 않음
 a[1] = 4
 a	//[1, 4, 3]
 b	//[1, 2, 3]

3. if 문
자료형 : 나무, 돌, 시멘트 ... 재료
제어문 : 철근 ... 건물의 뼈대

4. 비교 연산자
 x < y	x는 y보다 작다
 x > y	x는 y보다 크다
 x == y	x는 y와 같다
 x != y	x는 y가 아니다
 x >= y 	x는 y를 포함하면서 크다
 x <= y 	x는 y를 포함하면서 작다

 x or y	x와  y 둘 중 하나만 참이어도 참
 x and y	x와 y 둘 다 모두 참이어야만 참

5. if~elif문
 elif는 이전 조건문이 거짓일 때 수행됨

 if(조건):
 elif(조건):
 else:

6. 반복문
1-1 while 문
 반복횟수가 명확하지 않을 경우 사용 예) 10시까지 운동장을 돌아라
 
1-2 for 문
 반복횟수가 명확할 경우 사용 예) 운동장을 20바퀴 돌아라

7. input() 함수
 사용자에게 입력을 받을 수 있는 함수로, 입력 받은 모든 값은 문자가 됨
















